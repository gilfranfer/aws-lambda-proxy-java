AWSTemplateFormatVersion: 2010-09-09
Description: IAM Group and Users for Serverless Framework
Resources:
  ServerlessFmwkGroup:
    Type: 'AWS::IAM::Group'
    Properties:
      GroupName: !Join [ "-", [ "ServerlessFmwkGroup", !Ref AWS::Region] ]
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/CloudWatchFullAccess
        - arn:aws:iam::aws:policy/IAMFullAccess
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess #If you are planning to use DynamoDB
        - arn:aws:iam::aws:policy/AmazonAPIGatewayAdministrator #In case you want to do Lambda Proxy Integration (API Gateway+Lambda)
      Policies:
        - PolicyName: cloudformation-full-policy
          PolicyDocument: { "Version": "2012-10-17", "Statement": [ { "Sid": "serverless01", "Effect": "Allow", "Action": "cloudformation:*", "Resource": "*" } ] }
        - PolicyName: lambda-full-policy
          PolicyDocument: { "Version": "2012-10-17", "Statement": [ { "Sid": "serverless02", "Effect": "Allow", "Action": "lambda:*", "Resource": "*" } ] }
  ServerlessFmwkUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: !Join [ "-", [ "ServerlessFmwkUser", !Ref AWS::Region ] ]
  UserToGroup:
    Type: 'AWS::IAM::UserToGroupAddition'
    Properties:
      GroupName: !Join [ "-", [ "ServerlessFmwkGroup", !Ref AWS::Region ] ]
      Users:
        - !Join [ "-", [ "ServerlessFmwkUser", !Ref AWS::Region ] ]
    DependsOn:
      - ServerlessFmwkGroup
      - ServerlessFmwkUser
  UserAccessKey:
    Type: 'AWS::IAM::AccessKey'
    Properties:
      Status: 'Active'
      UserName: !Join [ "-", [ "ServerlessFmwkUser", !Ref AWS::Region ] ]
    DependsOn:
      - ServerlessFmwkUser
Outputs:
  ServerlessFmwkGroup:
    Value: !GetAtt 'ServerlessFmwkGroup.Arn'
  ServerlessFmwkUser:
    Value: !GetAtt 'ServerlessFmwkUser.Arn'
  UserSecretKey:
    Value: !GetAtt 'UserAccessKey.SecretAccessKey'
  UserAccessKey:
    Value: !Ref UserAccessKey
